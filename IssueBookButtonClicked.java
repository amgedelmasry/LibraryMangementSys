/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import static java.text.MessageFormat.format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static library.AddLibrarian.isNumeric;

/**
 *
 * @author Elmasry
 */
public class IssueBookButtonClicked extends javax.swing.JFrame {

    /**
     * Creates new form IssueBook
     */
    public IssueBookButtonClicked() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("id:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Book call number:");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Student ID:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Student name:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Student contact:");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Issue the book");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Issue Book");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Return Date:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jTextField4)
                            .addComponent(jTextField5)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jTextField1.getText().equals("") || jTextField3.getText().equals("") || jTextField4.getText().equals("") || jTextField5.getText().equals("") || jTextField2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "You must fill all the blanks");
        } else if (jTextField4.getText().matches(".*\\d.*")) {
            JOptionPane.showMessageDialog(null, "Name cannot contain numbers!");
        } else if (!isNumeric(jTextField3.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid input of the student iD");
        } else if (!isNumeric(jTextField1.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid input of the book iD");
        } else if (!dateValid(jTextField6.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid input of return date!");
        } else {
            boolean flag1 = false, flag2 = false;
            for (int i = 0; !flag1 && i < Book.books.size(); i++) {
                if (Book.books.get(i).iD == Integer.parseInt(jTextField1.getText()) && Book.books.get(i).callNo.equals(jTextField2.getText())) {
                    flag1 = true;
                    for (int j = 0; !flag2 && j < Student.students.size(); j++) {
                        if (Student.students.get(j).iD == Integer.parseInt(jTextField3.getText()) && Student.students.get(j).name.equals(jTextField4.getText()) && Student.students.get(j).contactNumber.equals(jTextField5.getText())) {
                            flag2 = true;
                            Book x = new Book();
                            x = Book.books.get(i);
                            Date currentTime = Calendar.getInstance().getTime();
                            x.issueDate = currentTime;
                            DateFormat format = new SimpleDateFormat("yyyy-MM-d");
                            try {
                                x.returnDate = format.parse(jTextField6.getText());
                            } catch (ParseException ex) {

                            }
                            if (Student.students.get(j).issuedbooks.size() < 3 && Book.books.get(i).quantity > 0) {
                                Student.students.get(j).issuedbooks.add(x);
                                Book.books.get(i).issued++;
                                Book.books.get(i).quantity--;
                                FileWriter f6;
                                try {
                                    f6 = new FileWriter("Students.txt");
                                    try (BufferedWriter bw = new BufferedWriter(f6)) {
                                        for (int m = 0; m < Student.students.size(); m++) {
                                            switch (Student.students.get(m).issuedbooks.size()) {
                                                case (0):
                                                    bw.write(Student.students.get(m).iD + "/" + Student.students.get(m).name + "/" + Student.students.get(m).password + "/" + Student.students.get(m).email + "/" + Student.students.get(m).address + "/" + Student.students.get(m).city + "/" + Student.students.get(m).contactNumber + "\n");
                                                    break;
                                                case (1):
                                                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                                    String issueDate1 = dateFormat.format(Student.students.get(m).issuedbooks.get(0).issueDate);
                                                    String returnDate1 = dateFormat.format(Student.students.get(m).issuedbooks.get(0).returnDate);
                                                    bw.write(Student.students.get(m).iD + "/" + Student.students.get(m).name + "/" + Student.students.get(m).password + "/" + Student.students.get(m).email + "/" + Student.students.get(m).address + "/" + Student.students.get(m).city + "/" + Student.students.get(m).contactNumber + "/" + Student.students.get(m).issuedbooks.get(0).iD + "/" + Student.students.get(m).issuedbooks.get(0).callNo + "/" + issueDate1 + "/" + returnDate1 + "\n");
                                                    break;
                                                case (2):
                                                    dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                                    issueDate1 = dateFormat.format(Student.students.get(m).issuedbooks.get(0).issueDate);
                                                    returnDate1 = dateFormat.format(Student.students.get(m).issuedbooks.get(0).returnDate);
                                                    String issueDate2 = dateFormat.format(Student.students.get(m).issuedbooks.get(1).issueDate);
                                                    String returnDate2 = dateFormat.format(Student.students.get(m).issuedbooks.get(1).returnDate);
                                                    bw.write(Student.students.get(m).iD + "/" + Student.students.get(m).name + "/" + Student.students.get(m).password + "/" + Student.students.get(m).email + "/" + Student.students.get(m).address + "/" + Student.students.get(m).city + "/" + Student.students.get(m).contactNumber + "/" + Student.students.get(m).issuedbooks.get(0).iD + "/" + Student.students.get(m).issuedbooks.get(0).callNo + "/" + issueDate1 + "/" + returnDate1 + "/" + Student.students.get(m).issuedbooks.get(1).iD + "/" + Student.students.get(m).issuedbooks.get(1).callNo + "/" + issueDate2 + "/" + returnDate2 + "\n");
                                                    break;
                                                case (3):
                                                    dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                                    issueDate1 = dateFormat.format(Student.students.get(m).issuedbooks.get(0).issueDate);
                                                    returnDate1 = dateFormat.format(Student.students.get(m).issuedbooks.get(0).returnDate);
                                                    issueDate2 = dateFormat.format(Student.students.get(m).issuedbooks.get(1).issueDate);
                                                    returnDate2 = dateFormat.format(Student.students.get(m).issuedbooks.get(1).returnDate);
                                                    String issueDate3 = dateFormat.format(Student.students.get(m).issuedbooks.get(2).issueDate);
                                                    String returnDate3 = dateFormat.format(Student.students.get(m).issuedbooks.get(2).returnDate);
                                                    bw.write(Student.students.get(m).iD + "/" + Student.students.get(m).name + "/" + Student.students.get(m).password + "/" + Student.students.get(m).email + "/" + Student.students.get(m).address + "/" + Student.students.get(m).city + "/" + Student.students.get(m).contactNumber + "/" + Student.students.get(m).issuedbooks.get(0).iD + "/" + Student.students.get(m).issuedbooks.get(0).callNo + "/" + issueDate1 + "/" + returnDate1 + "/" + Student.students.get(m).issuedbooks.get(1).iD + "/" + Student.students.get(m).issuedbooks.get(1).callNo + "/" + issueDate2 + "/" + returnDate2 + "/" + Student.students.get(m).issuedbooks.get(2).iD + "/" + Student.students.get(m).issuedbooks.get(2).callNo + "/" + issueDate3 + "/" + returnDate3 + "\n");
                                                    break;
                                            }
                                        }
                                        bw.close();
                                    }
                                } catch (IOException ex) {
                                    Logger.getLogger(AddLibrarian.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                FileWriter f9;
                                try {
                                    f9 = new FileWriter("Books.txt");
                                    try (BufferedWriter bw = new BufferedWriter(f9)) {
                                        for (int n = 0; n < Book.books.size(); n++) {
                                            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                            String dateAdded = dateFormat.format(Book.books.get(n).addedDate);
                                            bw.write(Book.books.get(n).iD + "/" + Book.books.get(n).callNo + "/" + Book.books.get(n).name + "/" + Book.books.get(n).author + "/" + Book.books.get(n).publisher + "/" + Book.books.get(n).quantity + "/" + Book.books.get(n).issued + "/" + dateAdded + "\n");
                                        }
                                        bw.close();
                                    }
                                } catch (IOException ex) {
                                    Logger.getLogger(AddLibrarian.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                JOptionPane.showMessageDialog(null, "Book issued succesfully!");
                                jLabel8.setText("Book issued succesfully!");
                            } else if (Student.students.get(j).issuedbooks.size() == 3) {
                                JOptionPane.showMessageDialog(null, "The student exceeded the limit of the issued books, he cant issue that one!");
                            } else if (Book.books.get(i).quantity == 0) {
                                JOptionPane.showMessageDialog(null, "This book is not available right now");
                            }
                        }
                    }
                }
            }
            if (flag1 == false) {
                JOptionPane.showMessageDialog(null, "Couldnt find this Book!");
            } else if (flag2 == false) {
                JOptionPane.showMessageDialog(null, "Couldnt find this Student!");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    public static boolean dateValid(String date) {
        try {
            DateFormat format = new SimpleDateFormat("yyyy-MM-d");
            Date datevalid = format.parse(date);
            return true;
        } catch (ParseException ex) {
            return false;
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new LibrarianSectionButton().setVisible(true);
        dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBookButtonClicked.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new IssueBookButtonClicked().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}

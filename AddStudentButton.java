/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static library.AddLibrarian.isNumeric;

/**
 *
 * @author Elmasry
 */
public class AddStudentButton extends javax.swing.JFrame {

    /**
     * Creates new form AddStudentButton
     */
    public AddStudentButton() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Add Student");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Password:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Email");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Address:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("City:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Contact number:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton1.setText("Add Student");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jPasswordField1)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jTextField4)
                            .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 107, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(141, 141, 141))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel1)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel2))
                                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel3))
                                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4))
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5))
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(2, 2, 2)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        new AdminSectionButton().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jTextField1.getText().equals("") || jPasswordField1.getText().equals("") || jTextField3.getText().equals("") || jTextField4.getText().equals("") || jTextField5.getText().equals("") || jTextField2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "You must fill all the blanks");
        } else if (jTextField1.getText().matches(".*\\d.*")) {
            JOptionPane.showMessageDialog(null, "Name cannot contain numbers!");
        } else if (jTextField4.getText().matches(".*\\d.*")) {
            JOptionPane.showMessageDialog(null, "City cannot contain numbers!");
        } else if (!jTextField2.getText().contains("@")) {
            JOptionPane.showMessageDialog(null, "Invalid input of the email");
        } else if (!isNumeric(jTextField5.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid input of the contact number");
        } else {
            Student x = new Student();
            x.name = jTextField1.getText();
            x.password = jPasswordField1.getText();
            x.email = jTextField2.getText();
            x.address = jTextField3.getText();
            x.city = jTextField4.getText();
            x.contactNumber = jTextField5.getText();
            if (Student.students.size() == 0) {
                x.iD = 1;
            } else {
                x.iD = Student.students.get(Student.students.size() - 1).iD + 1;
            }
            if (Student.students.size() == 0) {
                Student.students.add(x);
                FileWriter f6;
                try {
                    f6 = new FileWriter("Students.txt");
                    try (BufferedWriter bw = new BufferedWriter(f6)) {
                        for (int i = 0; i < Student.students.size(); i++) {
                            switch (Student.students.get(i).issuedbooks.size()) {
                                case (0):
                                    bw.write(Student.students.get(i).iD + "/" + Student.students.get(i).name + "/" + Student.students.get(i).password + "/" + Student.students.get(i).email + "/" + Student.students.get(i).address + "/" + Student.students.get(i).city + "/" + Student.students.get(i).contactNumber + "\n");
                                    break;
                                case (1):
                                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                    String issueDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).issueDate);
                                    String returnDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).returnDate);
                                    bw.write(Student.students.get(i).iD + "/" + Student.students.get(i).name + "/" + Student.students.get(i).password + "/" + Student.students.get(i).email + "/" + Student.students.get(i).address + "/" + Student.students.get(i).city + "/" + Student.students.get(i).contactNumber + "/" + Student.students.get(i).issuedbooks.get(0).iD + "/" + Student.students.get(i).issuedbooks.get(0).callNo + "/" + issueDate1 + "/" + returnDate1 + "\n");
                                    break;
                                case (2):
                                    dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                    issueDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).issueDate);
                                    returnDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).returnDate);
                                    String issueDate2 = dateFormat.format(Student.students.get(i).issuedbooks.get(1).issueDate);
                                    String returnDate2 = dateFormat.format(Student.students.get(i).issuedbooks.get(1).returnDate);
                                    bw.write(Student.students.get(i).iD + "/" + Student.students.get(i).name + "/" + Student.students.get(i).password + "/" + Student.students.get(i).email + "/" + Student.students.get(i).address + "/" + Student.students.get(i).city + "/" + Student.students.get(i).contactNumber + "/" + Student.students.get(i).issuedbooks.get(0).iD + "/" + Student.students.get(i).issuedbooks.get(0).callNo + "/" + issueDate1 + "/" + returnDate1 + "/" + Student.students.get(i).issuedbooks.get(1).iD + "/" + Student.students.get(i).issuedbooks.get(1).callNo + "/" + issueDate2 + "/" + returnDate2 + "\n");
                                    break;
                                case (3):
                                    dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                    issueDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).issueDate);
                                    returnDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).returnDate);
                                    issueDate2 = dateFormat.format(Student.students.get(i).issuedbooks.get(1).issueDate);
                                    returnDate2 = dateFormat.format(Student.students.get(i).issuedbooks.get(1).returnDate);
                                    String issueDate3 = dateFormat.format(Student.students.get(i).issuedbooks.get(2).issueDate);
                                    String returnDate3 = dateFormat.format(Student.students.get(i).issuedbooks.get(2).returnDate);
                                    bw.write(Student.students.get(i).iD + "/" + Student.students.get(i).name + "/" + Student.students.get(i).password + "/" + Student.students.get(i).email + "/" + Student.students.get(i).address + "/" + Student.students.get(i).city + "/" + Student.students.get(i).contactNumber + "/" + Student.students.get(i).issuedbooks.get(0).iD + "/" + Student.students.get(i).issuedbooks.get(0).callNo + "/" + issueDate1 + "/" + returnDate1 + "/" + Student.students.get(i).issuedbooks.get(1).iD + "/" + Student.students.get(i).issuedbooks.get(1).callNo + "/" + issueDate2 + "/" + returnDate2 + "/" + Student.students.get(i).issuedbooks.get(2).iD + "/" + Student.students.get(i).issuedbooks.get(2).callNo + "/" + issueDate3 + "/" + returnDate3 + "\n");
                                    break;
                            }
                        }
                        bw.close();
                    }
                } catch (IOException ex) {
                    Logger.getLogger(AddLibrarian.class.getName()).log(Level.SEVERE, null, ex);
                }
                jLabel8.setText("Student added successfully!");
                JOptionPane.showMessageDialog(null, "Student added successfully!");
            } else {
                int z = 0;
                for (int i = 0; i < Student.students.size(); i++) {
                    if (Student.students.get(i).email.equals(x.email) && Student.students.get(i).contactNumber.equals(x.contactNumber)) {
                        JOptionPane.showMessageDialog(null, "The Student already exists");
                        z = 1;
                        break;
                    }
                }
                if (z == 0) {
                    Student.students.add(x);
                    FileWriter f5;
                    try {
                        f5 = new FileWriter("Students.txt");
                        try (BufferedWriter bw = new BufferedWriter(f5)) {
                            for (int i = 0; i < Student.students.size(); i++) {
                                switch (Student.students.get(i).issuedbooks.size()) {
                                    case (0):
                                        bw.write(Student.students.get(i).iD + "/" + Student.students.get(i).name + "/" + Student.students.get(i).password + "/" + Student.students.get(i).email + "/" + Student.students.get(i).address + "/" + Student.students.get(i).city + "/" + Student.students.get(i).contactNumber + "\n");
                                        break;
                                    case (1):
                                        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                        String issueDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).issueDate);
                                        String returnDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).returnDate);
                                        bw.write(Student.students.get(i).iD + "/" + Student.students.get(i).name + "/" + Student.students.get(i).password + "/" + Student.students.get(i).email + "/" + Student.students.get(i).address + "/" + Student.students.get(i).city + "/" + Student.students.get(i).contactNumber + Student.students.get(i).issuedbooks.get(0).iD + "/" + Student.students.get(i).issuedbooks.get(0).callNo + "/" + issueDate1 + "/" + returnDate1 + "\n");
                                        break;
                                    case (2):
                                        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                        issueDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).issueDate);
                                        returnDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).returnDate);
                                        String issueDate2 = dateFormat.format(Student.students.get(i).issuedbooks.get(1).issueDate);
                                        String returnDate2 = dateFormat.format(Student.students.get(i).issuedbooks.get(1).returnDate);
                                        bw.write(Student.students.get(i).iD + "/" + Student.students.get(i).name + "/" + Student.students.get(i).password + "/" + Student.students.get(i).email + "/" + Student.students.get(i).address + "/" + Student.students.get(i).city + "/" + Student.students.get(i).contactNumber + Student.students.get(i).issuedbooks.get(0).iD + "/" + Student.students.get(i).issuedbooks.get(0).callNo + "/" + issueDate1 + "/" + returnDate1 + Student.students.get(i).issuedbooks.get(1).iD + "/" + Student.students.get(i).issuedbooks.get(1).callNo + "/" + issueDate2 + "/" + returnDate2 + "\n");
                                        break;
                                    case (3):
                                        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                                        issueDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).issueDate);
                                        returnDate1 = dateFormat.format(Student.students.get(i).issuedbooks.get(0).returnDate);
                                        issueDate2 = dateFormat.format(Student.students.get(i).issuedbooks.get(1).issueDate);
                                        returnDate2 = dateFormat.format(Student.students.get(i).issuedbooks.get(1).returnDate);
                                        String issueDate3 = dateFormat.format(Student.students.get(i).issuedbooks.get(2).issueDate);
                                        String returnDate3 = dateFormat.format(Student.students.get(i).issuedbooks.get(2).returnDate);
                                        bw.write(Student.students.get(i).iD + "/" + Student.students.get(i).name + "/" + Student.students.get(i).password + "/" + Student.students.get(i).email + "/" + Student.students.get(i).address + "/" + Student.students.get(i).city + "/" + Student.students.get(i).contactNumber + Student.students.get(i).issuedbooks.get(0).iD + "/" + Student.students.get(i).issuedbooks.get(0).callNo + "/" + issueDate1 + "/" + returnDate1 + Student.students.get(i).issuedbooks.get(1).iD + "/" + Student.students.get(i).issuedbooks.get(1).callNo + "/" + issueDate2 + "/" + returnDate2 + Student.students.get(i).issuedbooks.get(2).iD + "/" + Student.students.get(i).issuedbooks.get(2).callNo + "/" + issueDate3 + "/" + returnDate3 + "\n");
                                        break;
                                }
                            }
                            bw.close();
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(AddLibrarian.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    jLabel8.setText("Student added successfully!");
                    JOptionPane.showMessageDialog(null, "Student added successfully!");
                }
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStudentButton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStudentButton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStudentButton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStudentButton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStudentButton().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
